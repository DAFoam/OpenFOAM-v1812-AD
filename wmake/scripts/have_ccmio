#----------------------------------*-sh-*--------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2018 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM, licensed under GNU General Public License
#     <http://www.gnu.org/licenses/>.
#
# Script
#     have_ccmio
#
# Description
#     Detection/setup of ccmio
#
# Requires
#     config.sh/ccmio
#
# Functions provided
#     have_ccmio, no_ccmio, echo_ccmio
#
# Variables set on success
#     HAVE_CCMIO
#     CCMIO_ARCH_PATH
#     CCMIO_INC_DIR
#     CCMIO_LIB_DIR
#
#------------------------------------------------------------------------------
. $WM_PROJECT_DIR/wmake/scripts/sysFunctions # General system functions

#------------------------------------------------------------------------------

# Reset variables
no_ccmio()
{
    unset HAVE_CCMIO CCMIO_INC_DIR CCMIO_LIB_DIR
    return 0
}

# Report
echo_ccmio()
{
    echo "ccmio=${HAVE_CCMIO:-false}"
    echo "root=$CCMIO_ARCH_PATH"
    echo "include=$CCMIO_INC_DIR"
    echo "library=$CCMIO_LIB_DIR"
}


# On success, return 0 and export variables
# -> HAVE_CCMIO, CCMIO_INC_DIR, CCMIO_LIB_DIR
have_ccmio()
{
    local header library static label settings warn good
    warn="==> skip ccmio"

    # Basic setup/checks
    settings=$($WM_PROJECT_DIR/bin/foamEtcFile config.sh/ccmio) || {
        [ -n "$warn" ] && echo "$warn (no config.sh/ccmio settings)"
        return 1
    }
    . $settings
    if isNone "$CCMIO_ARCH_PATH"
    then
        [ -n "$warn" ] && echo "$warn (not available)"
        return 1
    fi


    # Header/library names.
    # Link with static libccmio only (fewer issues)
    #
    header="libccmio/ccmio.h"
    static="libccmio$extLiba"


    if hasAbsdir "$CCMIO_ARCH_PATH"
    then
        header=$(findFirstFile $CCMIO_ARCH_PATH/include/$header)

        library=$(findFirstFile \
            "$(thirdExtLib $library)" \
            $CCMIO_ARCH_PATH/lib/$static \
            $CCMIO_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH/$static \
        )
    else
        unset header library
    fi


    # Header found?
    [ -n "$header" ] || {
        [ -n "$warn" ] && echo "$warn (no header)"
        return 2
    }

    # Library found?
    [ -n "$library" ] || {
        [ -n "$warn" ] && echo "$warn (missing library)"
        return 2
    }

    header="${header%/*}"     # Strip one-level (include/libccmio/...)

    # The libccmio uses int32_t.
    # The OpenFOAM adapter thus requires additional work for 64-bit labels.
    # The OpenFOAM adapter was originally only designed for 'double'

    if [ "$WM_LABEL_SIZE" = 32 ]
    then
        if [ "$WM_PRECISION_OPTION" = DP ]
        then
            good=true
        else
            [ -n "$warn" ] && echo "$warn (double precision only)"
            no_ccmio
            return 1
        fi
    else
        [ -n "$warn" ] && echo "$warn (32-bit labels only)"
        no_ccmio
        return 1
    fi

    export HAVE_CCMIO=true
    export CCMIO_ARCH_PATH
    export CCMIO_INC_DIR="${header%/*}"     # Basename
    export CCMIO_LIB_DIR="${library%/*}"    # Basename
}


# Force reset of old variables
no_ccmio

# Testing
if [ "$1" = "-test" ]
then
    have_ccmio
    echo_ccmio
fi

#------------------------------------------------------------------------------
